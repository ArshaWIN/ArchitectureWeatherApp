// Generated by Dagger (https://dagger.dev).
package ilya.mihailenko.myapplication.di.app;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import ilya.mihailenko.myapplication.common.gps.GpsConnectionManager;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CommonAppModule_ProvideLocationConnectionManagerFactory implements Factory<GpsConnectionManager> {
  private final CommonAppModule module;

  private final Provider<Context> contextProvider;

  public CommonAppModule_ProvideLocationConnectionManagerFactory(CommonAppModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public GpsConnectionManager get() {
    return provideLocationConnectionManager(module, contextProvider.get());
  }

  public static CommonAppModule_ProvideLocationConnectionManagerFactory create(
      CommonAppModule module, Provider<Context> contextProvider) {
    return new CommonAppModule_ProvideLocationConnectionManagerFactory(module, contextProvider);
  }

  public static GpsConnectionManager provideLocationConnectionManager(CommonAppModule instance,
      Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideLocationConnectionManager(context));
  }
}
