// Generated by Dagger (https://dagger.dev).
package ilya.mihailenko.myapplication.di.common.module;

import com.github.terrakok.cicerone.NavigatorHolder;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NavigationModule_ProvideAppNavigationHolderFactory implements Factory<NavigatorHolder> {
  private final NavigationModule module;

  public NavigationModule_ProvideAppNavigationHolderFactory(NavigationModule module) {
    this.module = module;
  }

  @Override
  public NavigatorHolder get() {
    return provideAppNavigationHolder(module);
  }

  public static NavigationModule_ProvideAppNavigationHolderFactory create(NavigationModule module) {
    return new NavigationModule_ProvideAppNavigationHolderFactory(module);
  }

  public static NavigatorHolder provideAppNavigationHolder(NavigationModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideAppNavigationHolder());
  }
}
