// Generated by Dagger (https://dagger.dev).
package ilya.mihailenko.myapplication.model.repository.weather;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import ilya.mihailenko.myapplication.model.data.network.WeatherApi;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WeatherRepositoryImpl_Factory implements Factory<WeatherRepositoryImpl> {
  private final Provider<WeatherApi> weatherApiProvider;

  public WeatherRepositoryImpl_Factory(Provider<WeatherApi> weatherApiProvider) {
    this.weatherApiProvider = weatherApiProvider;
  }

  @Override
  public WeatherRepositoryImpl get() {
    return newInstance(weatherApiProvider.get());
  }

  public static WeatherRepositoryImpl_Factory create(Provider<WeatherApi> weatherApiProvider) {
    return new WeatherRepositoryImpl_Factory(weatherApiProvider);
  }

  public static WeatherRepositoryImpl newInstance(WeatherApi weatherApi) {
    return new WeatherRepositoryImpl(weatherApi);
  }
}
