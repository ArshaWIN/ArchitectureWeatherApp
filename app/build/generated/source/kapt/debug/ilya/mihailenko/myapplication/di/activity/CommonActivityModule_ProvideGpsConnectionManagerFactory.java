// Generated by Dagger (https://dagger.dev).
package ilya.mihailenko.myapplication.di.activity;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import ilya.mihailenko.myapplication.common.gps.GpsConnectionManager;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CommonActivityModule_ProvideGpsConnectionManagerFactory implements Factory<GpsConnectionManager> {
  private final CommonActivityModule module;

  private final Provider<Context> contextProvider;

  public CommonActivityModule_ProvideGpsConnectionManagerFactory(CommonActivityModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public GpsConnectionManager get() {
    return provideGpsConnectionManager(module, contextProvider.get());
  }

  public static CommonActivityModule_ProvideGpsConnectionManagerFactory create(
      CommonActivityModule module, Provider<Context> contextProvider) {
    return new CommonActivityModule_ProvideGpsConnectionManagerFactory(module, contextProvider);
  }

  public static GpsConnectionManager provideGpsConnectionManager(CommonActivityModule instance,
      Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideGpsConnectionManager(context));
  }
}
