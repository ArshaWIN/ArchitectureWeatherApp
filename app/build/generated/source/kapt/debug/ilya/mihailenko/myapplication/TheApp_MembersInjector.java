// Generated by Dagger (https://dagger.dev).
package ilya.mihailenko.myapplication;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import ilya.mihailenko.myapplication.common.activityprovider.ActivityProvider;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TheApp_MembersInjector implements MembersInjector<TheApp> {
  private final Provider<ActivityProvider> activityProvider;

  public TheApp_MembersInjector(Provider<ActivityProvider> activityProvider) {
    this.activityProvider = activityProvider;
  }

  public static MembersInjector<TheApp> create(Provider<ActivityProvider> activityProvider) {
    return new TheApp_MembersInjector(activityProvider);
  }

  @Override
  public void injectMembers(TheApp instance) {
    injectActivityProvider(instance, activityProvider.get());
  }

  @InjectedFieldSignature("ilya.mihailenko.myapplication.TheApp.activityProvider")
  public static void injectActivityProvider(TheApp instance, ActivityProvider activityProvider) {
    instance.activityProvider = activityProvider;
  }
}
