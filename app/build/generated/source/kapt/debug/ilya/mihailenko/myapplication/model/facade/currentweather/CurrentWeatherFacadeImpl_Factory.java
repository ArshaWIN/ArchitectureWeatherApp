// Generated by Dagger (https://dagger.dev).
package ilya.mihailenko.myapplication.model.facade.currentweather;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import ilya.mihailenko.myapplication.common.gps.GpsConnectionManager;
import ilya.mihailenko.myapplication.common.location.CurrentLocationTracker;
import ilya.mihailenko.myapplication.model.interactor.weather.WeatherInteractor;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CurrentWeatherFacadeImpl_Factory implements Factory<CurrentWeatherFacadeImpl> {
  private final Provider<CurrentLocationTracker> currentLocationTrackerProvider;

  private final Provider<GpsConnectionManager> gpsConnectionManagerProvider;

  private final Provider<WeatherInteractor> weatherInteractorProvider;

  public CurrentWeatherFacadeImpl_Factory(
      Provider<CurrentLocationTracker> currentLocationTrackerProvider,
      Provider<GpsConnectionManager> gpsConnectionManagerProvider,
      Provider<WeatherInteractor> weatherInteractorProvider) {
    this.currentLocationTrackerProvider = currentLocationTrackerProvider;
    this.gpsConnectionManagerProvider = gpsConnectionManagerProvider;
    this.weatherInteractorProvider = weatherInteractorProvider;
  }

  @Override
  public CurrentWeatherFacadeImpl get() {
    return newInstance(currentLocationTrackerProvider.get(), gpsConnectionManagerProvider.get(), weatherInteractorProvider.get());
  }

  public static CurrentWeatherFacadeImpl_Factory create(
      Provider<CurrentLocationTracker> currentLocationTrackerProvider,
      Provider<GpsConnectionManager> gpsConnectionManagerProvider,
      Provider<WeatherInteractor> weatherInteractorProvider) {
    return new CurrentWeatherFacadeImpl_Factory(currentLocationTrackerProvider, gpsConnectionManagerProvider, weatherInteractorProvider);
  }

  public static CurrentWeatherFacadeImpl newInstance(CurrentLocationTracker currentLocationTracker,
      GpsConnectionManager gpsConnectionManager, WeatherInteractor weatherInteractor) {
    return new CurrentWeatherFacadeImpl(currentLocationTracker, gpsConnectionManager, weatherInteractor);
  }
}
