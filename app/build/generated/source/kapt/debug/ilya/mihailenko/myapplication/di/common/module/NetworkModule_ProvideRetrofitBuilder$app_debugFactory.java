// Generated by Dagger (https://dagger.dev).
package ilya.mihailenko.myapplication.di.common.module;

import com.google.gson.Gson;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideRetrofitBuilder$app_debugFactory implements Factory<Retrofit.Builder> {
  private final NetworkModule module;

  private final Provider<Gson> gsonProvider;

  public NetworkModule_ProvideRetrofitBuilder$app_debugFactory(NetworkModule module,
      Provider<Gson> gsonProvider) {
    this.module = module;
    this.gsonProvider = gsonProvider;
  }

  @Override
  public Retrofit.Builder get() {
    return provideRetrofitBuilder$app_debug(module, gsonProvider.get());
  }

  public static NetworkModule_ProvideRetrofitBuilder$app_debugFactory create(NetworkModule module,
      Provider<Gson> gsonProvider) {
    return new NetworkModule_ProvideRetrofitBuilder$app_debugFactory(module, gsonProvider);
  }

  public static Retrofit.Builder provideRetrofitBuilder$app_debug(NetworkModule instance,
      Gson gson) {
    return Preconditions.checkNotNullFromProvides(instance.provideRetrofitBuilder$app_debug(gson));
  }
}
